# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Copyright 2022 Adobe Systems Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

name: Test dispatcher SDK update

# Only run on a push to develop branch or manually
on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        java: [11]

    outputs:
      commit: ${{ steps.getCommit.outputs.commit }}
    steps:
      # Checkout this project into a sub folder
      - uses: actions/checkout@v2
        with:
          path: archetype
      # Set up environment with Java and Maven
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      # Set up dependency cache
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('archetype/**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      # Install archetype snapshot and store version in a variable
      - name: Install archetype snapshot and store version in a variable
        run: |
          cd archetype
          mvn clean install -Darchetype.test.skip
          echo "ARCHETYPE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV
          echo "ARCHETYPE_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
          cd ..
      - name: Set commit in output variable
        id: getCommit
        run: |
          echo "Commit: ${ARCHETYPE_COMMIT}"
          echo ::set-output name=commit::${ARCHETYPE_COMMIT}
      # Create new project
      - name: Create new project with the archetype
        run: |
          mvn -B archetype:generate \
           -D archetypeGroupId=com.adobe.aem \
           -D archetypeArtifactId=aem-project-archetype \
           -D archetypeVersion=${ARCHETYPE_VERSION} \
           -D appTitle="Sites 30 Demo" \
           -D appId="sitesdemo" \
           -D groupId="com.sites30demo" \
           -D includeExamples="y" \
           -D includeFormsenrollment="y"
      # Set global git configuration
      - name: Test SDK update
        run: |
          archetype/src/main/archetype/dispatcher.cloud/test/test_dispatcher_sdk_update.sh sitesdemo archetype/src/main/archetype/dispatcher.cloud/test/dummy_sdk